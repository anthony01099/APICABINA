version: "3.5"

services:
   api_cabina:
       image: israelpaez14/cabina:2.0
       container_name: "api_cabina"
       volumes:
         - ./:/usr/src/app
         - media:/usr/src/app/media
       environment:
          - "DATABASE_HOST=postgres"
          - "DATABASE_NAME=cabina"
          - "DATABASE_USERNAME=cabina"
          - "DATABASE_PASSWORD=dbpassworD12!"

       networks:
          - backend
       depends_on:
          - postgres


   daphne:
        image: israelpaez14/cabina:2.0
        container_name: "daphne"
        volumes:
          - ./:/usr/src/app

        command: daphne -b 0.0.0.0 -p 8001 api_cabina.asgi:application -v 2
        networks:
          - backend
         
        environment:
          - "DATABASE_HOST=postgres"
          - "DATABASE_NAME=cabina"
          - "DATABASE_USERNAME=cabina"
          - "DATABASE_PASSWORD=dbpassworD12!"
        
        depends_on:
          - api_cabina


   postgres:
       image: postgres:9
       container_name: "postgres"
       environment:
           - "POSTGRES_PASSWORD=dbpassworD12!"
           - "POSTGRES_USER=cabina"

       volumes:
          - postgresdata:/var/lib/postgresql/data
       networks:
          - backend

   redis:
       image: "redis:alpine"

       command: redis-server --requirepass cReDisCab2023

       volumes:
          - $PWD/redis-data:/var/lib/redis
          - $PWD/redis.conf:/usr/local/etc/redis/redis.conf

       environment:
          - REDIS_REPLICATION_MODE=master

       networks:
          - backend

   nginx:
       image: nginx
       container_name: "nginx"
       volumes:
          - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
          - ./web_interface/admin/:/usr/src/app/static/admin/:ro
          - media:/usr/src/media:ro
       ports:
          - "3000:80"
       networks:
          - bridge
          - backend
       depends_on:
          - api_cabina

networks:
    backend:
       name: "backend_network"
    bridge:
       name: "docker_bridge"


volumes:
       postgresdata:
           name: "postgresdata"
       media:
           name: "media_volume"
